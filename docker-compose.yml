services:
  agent:
    build: .
    container_name: ferrolink-agent
    env_file: .env
    volumes:
      - ./uploads:/app/uploads
      - ./cert.pem:/app/cert.pem:ro
      - ./key.pem:/app/key.pem:ro
    ports:
      - "8080:8080"
      - "9090:9090"

  postgres:
    image: postgres:15-alpine
    container_name: ferrolink-postgres
    restart: unless-stopped
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  migrate:
    image: rust:1.88-alpine            # public image â€“ no login needed
    depends_on: [postgres]
    working_dir: /work
    volumes:
      - ./migrations:/work/migrations:ro
    env_file: .env
    entrypoint: >
      sh -c "
        apk add --no-cache musl-dev clang llvm openssl-dev pkgconf &&
        cargo install sqlx-cli --no-default-features --features rustls,postgres &&
        sqlx migrate run --source ./migrations
      "
    restart: "no"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports: ["9091:9090"]
    depends_on: [agent]

  dashboard:
    build: ./dashboard                         # see section B
    ports: ["3000:80"]
    depends_on: [agent]
    env_file: .env

volumes:
  pgdata: